name: Build and Push m1 Docker Image

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/my-image

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./Python/
          push: ${{ github.event_name != 'pull_request' }}
          file: ./Dockerfilem1
          tags: ${{ vars.DOCKER_USERNAME }}/m1:latest
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::781461006327:role/GitHubActionsRole
          role-session-name: GitHub-Actions-Deploy

      - uses: actions/checkout@v2
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.EC2_DNS_NAME}}
            USER_NAME: ${{secrets.REMOTE_USER}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

              # Now we have got the access of EC2 and we will start the deploy .
              sudo docker stop $(sudo docker ps -a -q)
              sudo docker rm $(sudo docker ps -a -q)
              sudo docker run -d -p 80:80 azargh/m1:latest
              '